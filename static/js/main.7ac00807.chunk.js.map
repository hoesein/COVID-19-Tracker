{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/covid.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","modifiedData","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchApi","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountyPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formcontrol","NativeSelect","default","onChange","e","target","key","App","state","fetchedData","setState","this","img","src","covid","CountryPicker","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7ac00807.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__Jjz_1\",\"card\":\"Cards_card__16HjD\",\"infected\":\"Cards_infected__3xuGo\",\"recovered\":\"Cards_recovered__2Fzsy\",\"deaths\":\"Cards_deaths__3QbNn\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\n\r\nimport styles from './Cards.module.css';\r\nimport cx from 'classnames' ;\r\n\r\nconst Cards = ({ data : { confirmed, recovered, deaths, lastUpdate }}) => {\r\n\r\n    if(!confirmed){\r\n        return \"Loading ...\" ;\r\n    }\r\n    \r\n    return (\r\n        <div className={ styles.container }>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={ cx(styles.card, styles.infected )}>\r\n                    <CardContent >\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={ confirmed.value } duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{ new Date(lastUpdate).toDateString() }</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={ cx(styles.card, styles.recovered )}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={ recovered.value } duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{ new Date(lastUpdate).toDateString() }</Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries cases by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={ cx(styles.card, styles.deaths )}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={ deaths.value } duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{ new Date(lastUpdate).toDateString() }</Typography>\r\n                        <Typography variant=\"body2\">Number of Deaths cases by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards ;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n\r\n    let changeableUrl = url ;\r\n\r\n    if(country){\r\n        changeableUrl = `${url}/countries/${country}` ;\r\n    }\r\n\r\n    try {\r\n        /* normal way */\r\n        // const response = await axios.get(url); \r\n        // const modifiedData = {\r\n        //     confirmed : response.data.confirmed,\r\n        //     recovered : response.data.recovered,\r\n        //     deaths : response.data.deaths,\r\n        //     lastUpdate : response.data.lastUpdate\r\n        // }\r\n\r\n        /* get data from response with distructring method */\r\n        const { data : { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl); \r\n\r\n        const modifiedData = { confirmed, recovered, deaths, lastUpdate } ;\r\n\r\n        return modifiedData ;\r\n\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const fetchDailyData =  async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n\r\n        const modifiedData = data.map( ( dailyData ) => ({\r\n            confirmed : dailyData.confirmed.total,\r\n            deaths : dailyData.deaths.total,\r\n            date : dailyData.reportDate\r\n        }));\r\n        return modifiedData ;\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data : { countries }} = await axios.get(`${url}/countries`);\r\n\r\n        return countries.map( country => country.name ) ;\r\n    } catch (error) {\r\n        \r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\n\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchApi = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n\r\n        fetchApi();\r\n    }, [setDailyData]);\r\n\r\n    const lineChart = (\r\n        dailyData.length\r\n            ? (<Line data={{\r\n                labels: dailyData.map(({ date }) => date),\r\n                datasets: [{\r\n                    data: dailyData.map(({ confirmed }) => confirmed),\r\n                    label: \"Infercted\",\r\n                    borderColor: '#3333ff',\r\n                    fill: true\r\n                }, {\r\n                    data: dailyData.map(({ deaths }) => deaths),\r\n                    label: \"Deaths\",\r\n                    borderColor: \"red\",\r\n                    backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                    fill: true\r\n                }],\r\n            }} />)\r\n            : null\r\n    );\r\n\r\n    const barChart = (\r\n        confirmed\r\n            ? (<Bar\r\n                data={{\r\n                    labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n                    datasets: [{\r\n                        labels: \"Patients\",\r\n                        backgroundColor: [\r\n                            'rgba(0,0,255, 0.5)',\r\n                            'rgba(0, 255,0, 0.5)',\r\n                            'rgba(255,0, 0, 0.5)',\r\n                        ],\r\n                        data: [confirmed.value, recovered.value, deaths.value]\r\n                    }]\r\n                }}\r\n                options={{\r\n                    legend: { display: false },\r\n                    title: { display: true, text: `Current state in ${country}` },\r\n                }}\r\n            />\r\n            ) : null\r\n    )\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            { country ? barChart : lineChart }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountyPicker = ({ handleCountryChange }) => {\r\n\r\n    const [ fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect( () => {\r\n        const fetchApi = async () => {\r\n            setFetchedCountries( await fetchCountries());\r\n        }\r\n        fetchApi() ;\r\n    }, [setFetchedCountries]);\r\n\r\n    return (\r\n        <FormControl className={ styles.formcontrol }>\r\n            <NativeSelect default=\"\" onChange={ (e) => handleCountryChange(e.target.value)}>\r\n                <option value = \"\" >Global</option>\r\n                { fetchedCountries.map( (country, key) => <option key={key} value={country}>{country}</option>) }\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountyPicker ;","import React from 'react';\r\n\r\nimport { Cards, Chart, CountryPicker } from './components';\r\nimport styles from './App.module.css' ;\r\nimport { fetchData } from './api';\r\nimport covid from \"./images/covid.png\";\r\n\r\nclass App extends React.Component{\r\n    \r\n    state = {\r\n        data : {},\r\n        country : '',\r\n    } ;\r\n\r\n    async componentDidMount(){\r\n        const fetchedData = await fetchData();\r\n\r\n        this.setState({ data : fetchedData });\r\n    }\r\n\r\n    handleCountryChange = async ( country ) => {\r\n        const fetchedData = await fetchData(country);\r\n\r\n        this.setState( { data : fetchedData, country : country })\r\n    }\r\n\r\n    render(){\r\n        const { data, country } = this.state ;\r\n        return (\r\n        <div className={ styles.container }>\r\n            <img className={styles.img} src={ covid } />\r\n            <Cards data ={ data } />\r\n            <CountryPicker handleCountryChange = { this.handleCountryChange }/>\r\n            <Chart data={data} country={country} />\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App ;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1qmvG\",\"img\":\"App_img__3q6sI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2nQw-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formcontrol\":\"CountryPicker_formcontrol__2aY4C\"};","module.exports = __webpack_public_path__ + \"static/media/covid.d7265326.png\";"],"sourceRoot":""}